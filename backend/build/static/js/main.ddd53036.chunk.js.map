{"version":3,"sources":["components/action/SignUp.jsx","components/action/NavBar.jsx","components/action/Login.jsx","components/pages/Profile.jsx","components/action/Create.jsx","components/pages/ShowOnePlace.jsx","components/pages/Home.jsx","components/action/AuthRoute.jsx","components/pages/AboutUs.jsx","components/pages/Footer.jsx","components/pages/EditUserInfo.jsx","components/action/EditPlace.jsx","App.js","reportWebVitals.js","index.js"],"names":["validtionSchima","Yup","name","required","email","password","min","max","Signup","props","history","useHistory","useState","lastName","image","user","register","setRegister","Alert","variant","initialValues","validationSchema","onSubmit","values","axios","post","then","res","data","push","setTimeout","catch","err","console","log","className","Container","style","width","margin","Row","Col","md","Form","Label","Control","as","Field","placeholder","render","msg","type","Button","textAlign","NavBar","backgroundColor","dark","expand","href","left","fontSize","active","to","color","icon","isLoggedIn","right","far","onClick","localStorage","removeItem","loginCallback","Login","credentials","setCredentials","onChangeInput","event","target","value","height","paddingTop","xl","delay","id","label","onChange","e","gradient","preventDefault","token","setItem","alert","Profile","places","setPlaces","flag","setFlag","useEffect","get","result","allplaces","map","place","maxWidth","reverse","cascade","src","_id","fontWeight","placeId","delete","pre","activeClassName","auth","currentUser","fab","valid","object","key","Create","Date","startDate","setStartDate","description","category","location","workingHours","placeFields","setPlaceFields","selected","date","prevState","handleOnChangeDate","ShowPage","errorRating","setErrorRating","score","setScore","added","comment","setComment","useParams","selectPlace","pros","onePlace","total","reviews","reduce","a","b","length","allComment","comments","text","outline","userId","setAuth","placesToVisit","class","count","newRating","size","color2","body","userName","productId","lg","rows","Home","setCategory","setSelectedCategory","filterPlaces","setFilterPlaces","Axios","categories","unshift","Array","from","Set","filteredPlaces","allSelect","ele","filter","onChangeHandler","caret","basic","header","AuthRoute","userProfile","setUserProfile","AboutUs","Footer","confirmPassword","test","this","parent","img","EditUserInfo","userInfo","setUserInfo","userdetails","testimonial","htmlFor","EditPlace","placetFields","put","response","handleEdit","App","setDataloaded","currentDataUser","userData","userLogin","jwtToken","jwt_decode","getProfile","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddd53036.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Form, Col, Button, Alert, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nconst validtionSchima = Yup.object({\r\n  name: Yup.string().required(\"Enter your Name please\"),\r\n  email: Yup.string().required(\"Enter your email please\").email(\"example@example.com\"),\r\n  password: Yup.string().required(\"Enter your passwor please!!\").min(8, \"must be more than 8\").max(20, \"whatEver\")\r\n})\r\nexport default function Signup(props) {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState({ name: \"\", lastName: \"\", image: \"\", email: \"\", password: \"\" }); // user info\r\n  const [register, setRegister] = useState(true); // to show aleart\r\n  //to add the input inside user\r\n  // to add the user info to database\r\n  const onSubmit = (values) => {\r\n    // values.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:5000/api/user/signup\", values)\r\n      .then((res) => {\r\n        const user = res.data.user;\r\n        if (user) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          setRegister(false);\r\n          setTimeout(() => {\r\n            setRegister(true);\r\n          }, 3000);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      {!register && (\r\n        <Alert variant={\"danger\"}>\r\n          The email is already in use. Please change the email\r\n        </Alert>\r\n      )}\r\n      <Formik\r\n        initialValues={user}\r\n        validationSchema={validtionSchima}\r\n        onSubmit={values => onSubmit(values)}\r\n      >\r\n        <FormikForm className=\"mt-5\">\r\n          <Container style={{ width: \"1000px\", margin: \"0 auto\" }}>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Col md={8}>\r\n                <Form.Row>\r\n                  <Col md={6}>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      as={Field}\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"name\"\r\n                    />\r\n                    <ErrorMessage name=\"name\" render={(msg) => <Alert variant={\"danger\"}>\r\n                      {msg}\r\n                    </Alert>} />\r\n                  </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                  <Col md={6}>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                      as={Field}\r\n                      placeholder=\"Enter Your Email\"\r\n                      name=\"email\"\r\n                    />\r\n                    <ErrorMessage name=\"email\" render={(msg) => <Alert variant={\"danger\"}>\r\n                      {msg}\r\n                    </Alert>} />\r\n                  </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                  <Col md={6}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      as={Field}\r\n                      placeholder=\"Enter Your Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                    />\r\n                    <ErrorMessage name=\"password\" render={(msg) => <Alert variant={\"danger\"}>\r\n                      {msg}\r\n                    </Alert>} />\r\n                  </Col>\r\n                </Form.Row>\r\n\r\n                <Button\r\n                  variant=\"info\"\r\n                  type=\"submit\"\r\n                  style={{ textAlign: \"center\" }}\r\n                // onClick={(e) => onSubmit(e)}\r\n                >\r\n                  Submit\r\n            </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </FormikForm>\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\n","\r\nimport \"../../App.css\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\r\nimport { useHistory } from 'react-router-dom';\r\nexport default function NavBar(props) {\r\n    const bgPink = { backgroundColor: '#a9dceb' }\r\n    const history = useHistory();\r\n\r\n\r\n    const logOut = () => {\r\n        console.log(\"Logging Out!\");\r\n        localStorage.removeItem(\"jwtToken\");\r\n        props.loginCallback();\r\n        history.push('/');\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <MDBNavbar style={bgPink} dark expand=\"md\"  >\r\n                    {/*                 scrolling fixed=\"top\"\r\n */}                    <MDBNavbarBrand href=\"/\">\r\n                        <strong></strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarNav left style={{ fontSize: \"25px\" }}>\r\n                        <MDBNavItem active>\r\n                            <MDBNavLink to=\"/\" style={{ color: \"black\" }}><MDBIcon icon=\"home\" /> ℍ𝕠𝕞𝕖</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"/aboutus\" style={{ color: \"black\" }}> <MDBIcon icon=\"info\" /> 𝔸𝕓𝕠𝕦𝕥 𝕦𝕤</MDBNavLink>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    {!props.isLoggedIn ? <>\r\n\r\n                        <MDBNavbarNav right style={{ fontSize: \"25px\" }}>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/signup\" style={{ color: \"black\" }}><MDBIcon icon=\"user-plus\" /> 𝕊𝕚𝕘𝕟𝕦𝕡 </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/login\" style={{ color: \"black\" }}> <MDBIcon icon=\"sign-in-alt\" /> 𝕃𝕠𝕘𝕚𝕟 </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </> : <>\r\n                            <MDBNavbarNav right style={{ fontSize: \"25px\" }}>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"/profile\" style={{ color: \"black\" }}><MDBIcon far icon=\"user\" /> ℙ𝕣𝕠𝕗𝕚𝕝𝕖 </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem onClick={() => logOut()}>\r\n                                    <MDBNavLink to=\"/logout\" style={{ color: \"black\" }}> <MDBIcon icon=\"sign-out-alt\" /> 𝕃𝕠𝕘𝕠𝕦𝕥 </MDBNavLink>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </>}\r\n\r\n\r\n                </MDBNavbar>\r\n\r\n            </header>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { MDBAnimation, MDBCard, MDBCardBody, MDBCol, MDBIcon, MDBInput, MDBContainer, MDBBtn, MDBLink, MDBAlert } from 'mdbreact';\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const [register, setRegister] = useState(true); // to show aleart\r\n\r\n\r\n  const history = useHistory();\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n\r\n\r\n  const onChangeInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setCredentials({\r\n      ...credentials,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:5000/api/user/login\", credentials)\r\n      .then((res) => {\r\n        console.log(\"Express backend /login response\", res);\r\n\r\n        const token = res.data.token;\r\n        const msg = res.data.msg;\r\n\r\n        if (token) {\r\n          localStorage.setItem(\"jwtToken\", token);\r\n          props.loginCallback();\r\n          alert(\"Logged in successfully, Welcome\")\r\n          history.push(\"/profile\"); // /profile\r\n        } else {\r\n          console.log(\"Login error: \", msg);\r\n          setRegister(false)\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!register && (\r\n        <MDBAlert color=\"danger\">\r\n          The email address or password is incorrect. Please retry...\r\n        </MDBAlert>\r\n      )}\r\n      <div  >\r\n        <MDBContainer\r\n          style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\r\n          className='mt-2  d-flex justify-content-center align-items-center'\r\n        >\r\n          <MDBCol md='6' xl='5' className='mb-4'>\r\n            <MDBAnimation type='fadeInRight' delay='.3s'>\r\n              <MDBCard id='classic-card'>\r\n                <h1 className='text-center mt-5'>\r\n                  𝕃𝕠𝕘 𝕀𝕟\r\n                      </h1>\r\n                <MDBCardBody className='white-text'>\r\n\r\n\r\n                  <hr className='hr-light' />\r\n\r\n                  <MDBInput\r\n                    /*    className='white-text'\r\n                       iconClass='white-text' */\r\n                    label='Your email'\r\n                    icon='envelope'\r\n                    type='email'\r\n                    name=\"email\"\r\n                    onChange={(e) => onChangeInput(e)}\r\n                  />\r\n                  <MDBInput\r\n                    label='Your password'\r\n                    icon='lock'\r\n                    type='password'\r\n                    name=\"password\"\r\n                    onChange={(e) => onChangeInput(e)}\r\n                  />\r\n                  <div className='text-center mt-4 black-text '>\r\n                    <MDBBtn gradient=\"deep-blue\" onClick={(e) => onSubmit(e)}> Log In</MDBBtn>\r\n                  </div>\r\n                  {/* <div className='text-center'>\r\n                  <MDBLink to='#'  >\r\n                    forget password?\r\n                    </MDBLink>\r\n                </div> */}\r\n                  <div className='text-center'>\r\n\r\n                    <h4>New User?</h4>\r\n                    <MDBLink to='/signup'  >\r\n                      Sign Up\r\n                    </MDBLink>\r\n                  </div>\r\n\r\n\r\n\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBAnimation>\r\n          </MDBCol>\r\n        </MDBContainer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon, MDBBtn } from 'mdbreact';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBContainer, MDBCardTitle, MDBRow, MDBMask } from \"mdbreact\";\r\n\r\nimport axios from 'axios'\r\n\r\nconst Profile = (props) => {\r\n    const [places, setPlaces] = useState([])\r\n    const [flag, setFlag] = useState(false)\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/place`)\r\n            .then(res => {\r\n                setPlaces(res.data.result)\r\n                console.log(\"place info:\", places)\r\n\r\n            })\r\n    }, [flag])\r\n\r\n    const handleDelete = (placeId) => {\r\n        console.log(\"Delete\", placeId)\r\n        axios.delete(`http://localhost:5000/api/place/${placeId}`) ///${props.user._id}\r\n            .then(data => {\r\n                console.log(\"delete data \", data)\r\n                alert(\"Deleted successfully\")\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n        setFlag(pre => !pre)\r\n    }\r\n\r\n\r\n    const allplaces = places.map(place => {\r\n        return (\r\n\r\n            <MDBCol className='' md=\"4\" style={{ maxWidth: \"40rem\" }}>\r\n                <MDBCard reverse className=\"cardPadding\">\r\n                    <MDBCardImage cascade style={{ height: '20rem', width: \"100%\" }} src={place.image} />\r\n                    <MDBCardBody cascade className=\"text-center\">\r\n                        <MDBCardTitle>{place.name}</MDBCardTitle>\r\n                        <Link to={`/edit/${place._id}`}>\r\n                        <MDBBtn style={{ fontSize: \"15px\", fontWeight: \"bold\", color: \"black\" }} gradient=\"deep-blue\">\r\n                            <MDBIcon icon=\"edit\" className=\"iconsStyle \" />\r\n                            Edit\r\n                        </MDBBtn>\r\n                        </Link>\r\n                        <MDBBtn onClick={() => handleDelete(place._id)} style={{ fontSize: \"15px\", fontWeight: \"bold\", color: \"black\" }} gradient=\"deep-blue\">\r\n                            <MDBIcon icon=\"trash-alt\" className=\"iconsStyle \" /> Delete\r\n                        </MDBBtn>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBCol>\r\n\r\n        )\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <MDBContainer>\r\n                {props.user.email === \"admin@admin.com\" ? <>\r\n                    <h2 className=\"headerStyleAdmin\">\r\n                        <MDBIcon icon=\"user-secret\" className=\"iconsStyle mb-3\" />\r\n                            Admin Profile\r\n                    </h2>\r\n\r\n                    <MDBRow className=\"styleProfile\">\r\n                        <NavLink to=\"/create\" activeClassName=\"activeClass\" style={{ fontSize: \"40px\" }} style={{ color: \"#a9dceb\" }} className=\"createHover\">\r\n                            <MDBIcon far icon=\"plus-square\" className=\"iconsStyle fixPadding iconsCreateStyle\" />\r\n                            <span className=\"iconsCreateStyle\">Create</span>\r\n                        </NavLink>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        {allplaces}\r\n                    </MDBRow>\r\n                </> : <>\r\n                        <h2 className=\"headerStyleAdmin\">\r\n                            <MDBIcon icon=\"user-circle\" className=\"iconsStyle mb-3\" />\r\n                            User Profile : {props.auth.currentUser.name}\r\n                        </h2>\r\n                        <MDBRow className=\"styleProfile stylePaddingUser\">\r\n                            <NavLink to=\"/tables\" activeClassName=\"activeClass\" style={{ fontSize: \"40px\" }} style={{ color: \"#a9dceb\" }} className=\"createHover styleBorder\">\r\n                                <MDBIcon fab icon=\"gratipay\" className=\"iconsStyle fixPadding iconsCreateStyle\" />\r\n                                <span className=\"iconsCreateStyle styleText\">Favorite Place</span>\r\n                            </NavLink>\r\n                            <NavLink to={`/edituserinfo/${props.user._id}`} activeClassName=\"activeClass\" style={{ fontSize: \"40px\" }} style={{ color: \"#a9dceb\" }} className=\"createHover\">\r\n                                <MDBIcon icon=\"user-edit\" className=\"iconsStyle fixPadding iconsCreateStyle\" />\r\n                                <span className=\"iconsCreateStyle\">Edit User Information</span>\r\n                            </NavLink>\r\n                        </MDBRow>\r\n                    </>}\r\n            </MDBContainer>\r\n        </>\r\n    );\r\n}\r\nexport default Profile;","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBCard, MDBAnimation, MDBCardBody } from 'mdbreact';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Profile from \"../pages/Profile\"\r\n//import { MDBDatePickerV5 } from 'mdbreact';\r\n//import NavBar from './components/NavBar';\r\n\r\n\r\n\r\nfunction valid(object) {\r\n  let flag = true\r\n  for (var key in object) {\r\n    if (object[key] == \" \") {\r\n\r\n      flag = false\r\n    }\r\n  }\r\n  return flag\r\n}\r\n\r\nexport default function Create(props) {\r\n  console.log(props)\r\n  const history = useHistory();\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n  const [placeFields, setPlaceFields] = useState({\r\n    name: \" \",\r\n    description: \" \",\r\n    image: \" \",\r\n    category: \"Choose the place\",\r\n    location: \" \",\r\n    workingHours: \" \",\r\n\r\n  });\r\n\r\n\r\n\r\n  const handleOnChangeDate = (date) => {\r\n\r\n    setStartDate(date)\r\n\r\n    setPlaceFields((prevState) => ({\r\n      ...prevState, date: date\r\n    }))\r\n  }\r\n\r\n\r\n  const onSubmit = (e) => {\r\n    console.log(placeFields);\r\n    e.preventDefault();\r\n    console.log(valid(placeFields))\r\n    if (!valid(placeFields)) {\r\n      alert(\"somting is missing ! \")\r\n\r\n    } else {\r\n\r\n      axios\r\n        .post(\"http://localhost:5000/api/place/create\", placeFields)\r\n        .then((res) => {\r\n\r\n          const place = res.data;\r\n\r\n          console.log(\"response data: \", res.data)\r\n\r\n          if (place) {\r\n            alert(\"Place added successfully\")\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(\"Error! check your information and try again\")\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const onChangeInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setPlaceFields({\r\n      ...placeFields,\r\n      [name]: value,\r\n    });\r\n    console.log(placeFields)\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      { props.user != null && props.user.email == \"admin@admin.com\" ?\r\n        <div className=\"classicformpage\">\r\n          <MDBContainer\r\n            style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\r\n            className='mt-5  d-flex justify-content-center align-items-center'\r\n          >\r\n            <MDBCol md='6' xl='5' className='mb-4' >\r\n              <MDBAnimation type='fadeInRight' delay='.3s'>\r\n                <MDBCard id='classic-card'>\r\n                  <h1 className='text-center mt-5' ><MDBIcon icon='' />\r\n                       ℂℝ𝔼𝔸𝕋𝔼\r\n                      </h1>\r\n                  <MDBCardBody className='white-text'>\r\n\r\n                    <hr className='hr-light' />\r\n\r\n                   \r\n\r\n                    <MDBInput\r\n                      /* className='white-text'\r\n                      iconClass='white-text' */\r\n                      label='Name'\r\n                      name=\"name\"\r\n                      onChange={(e) => onChangeInput(e)}\r\n                    />\r\n\r\n                    <MDBInput\r\n                      /*    className='white-text'\r\n                         iconClass='white-text' */\r\n                      label='Description'\r\n                      name=\"description\"\r\n                      onChange={(e) => onChangeInput(e)} />\r\n\r\n                    <MDBInput\r\n                      label='Image'\r\n                      name=\"image\"\r\n                      /* onChange={(e) =>uploadImageHundler(e)} type=\"file\" */\r\n                      onChange={(e) => onChangeInput(e)} />\r\n\r\n\r\n                    <MDBInput\r\n                      /* className='white-text'\r\n                      iconClass='white-text' */\r\n                      label='Location'\r\n                      name=\"location\"\r\n                      onChange={(e) => onChangeInput(e)}\r\n                    />\r\n\r\n\r\n                    <MDBInput\r\n                      /* className='white-text'\r\n                      iconClass='white-text' */\r\n                      label='working Hours'\r\n                      name=\"workingHours\"\r\n                      onChange={(e) => onChangeInput(e)}\r\n                    />\r\n\r\n                    <DatePicker\r\n                      name=\"date\"\r\n                      selected={startDate}\r\n                      onChange={(date) => handleOnChangeDate(date)} />\r\n\r\n                    <br /><br />\r\n\r\n                    <select className=\"browser-default custom-select\" name=\"category\" onChange={(e) => onChangeInput(e)}>\r\n                      <option >Choose the place</option>\r\n                      <option>cafe</option>\r\n                      <option >restaurant</option>\r\n                      <option >entertainment</option>\r\n                      <option >concert</option>\r\n                    </select>\r\n\r\n\r\n                    <div className='text-center mt-4 black-text'>\r\n                      <MDBBtn gradient=\"blue\" onClick={(e) => onSubmit(e)} >Submit</MDBBtn>\r\n                    </div>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n          </MDBContainer>\r\n        </div>\r\n        : <div>\r\n          <MDBContainer>\r\n            <h1 className=\"text-justify\" style={{ fontSize: \"25px\" }}>Only the admin can access this page</h1>\r\n          </MDBContainer>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBCardImage,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBAlert,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ReactStars from 'react-stars';\r\n\r\n\r\n\r\nexport default function ShowPage(props) {\r\n  const [place, setPlaces] = useState([])\r\n  const [errorRating, setErrorRating] = useState(false)\r\n  const [score, setScore] = useState(5)\r\n  const [added, setadded] = useState(true);\r\n  const [comment, setComment] = useState({});\r\n  // const [allcomment, setAllComment] = useState([])\r\n  const [flag, setFlag] = useState(false)\r\n  const { id } = useParams()\r\n  const selectPlace = props.selectPlace;\r\n\r\n\r\n\r\n\r\n  const addPlace = () => {\r\n    console.log(\"placeId = \", selectPlace._id);\r\n    console.log(\"userId = \", props.user._id);\r\n    axios\r\n      .post(\"http://localhost:5000/place/tovisit\", {\r\n        placeId: selectPlace._id,\r\n        userId: props.user._id,\r\n      })\r\n      .then((data) => {\r\n        props.setAuth((pre) => ({\r\n          ...pre,\r\n          currentUser: {\r\n            ...pre.currentUser,\r\n            placesToVisit: data.data.placesToVisit,\r\n          },\r\n        }));\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const onChangeInput = ({ target: { name, value } }) => {\r\n    setComment({ ...comment, [name]: value });\r\n    console.log(\"comment\", comment);\r\n  };\r\n\r\n  // git data\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/api/place/${id}`)\r\n      .then((res) => {\r\n        setPlaces(res.data.pros);\r\n        console.log(\"place info for comment\", place)\r\n        const onePlace = res.data.pros;\r\n        console.log(onePlace)\r\n        const total = onePlace.reviews.reduce((a, b) => a + (b[\"score\"] || 0), 0)\r\n        if (onePlace.reviews.length > 0) {\r\n          setScore(total / onePlace.reviews.length)\r\n        }\r\n        console.log(\"place info\", onePlace);\r\n      });\r\n\r\n  }, [flag]);\r\n\r\n\r\n  const handleRating = () => {\r\n    if (props.isLoggedIn) {\r\n      const body = {\r\n        userId: props.user._id,\r\n        score: score,\r\n        userName: props.user.name,\r\n        productId: id\r\n      }\r\n      // user id \r\n      // score \r\n      axios.post(`http://localhost:5000/api/place/review`, body)\r\n        .then(res => {\r\n          console.log(res)\r\n          console.log(\"reviewd done\")\r\n          if (res.data == \"Error! you already reviewed\") {\r\n            setErrorRating(true)\r\n          }\r\n        })\r\n    } else {\r\n      console.log(\"Login first\");\r\n    }\r\n  }\r\n\r\n  const ratingChanged = (newRating) => {\r\n    setScore(newRating)\r\n  }\r\n\r\n  // // git data\r\n  // useEffect(() => {\r\n  //     axios.get(`http://localhost:5000/api/place/${id}`)\r\n  //       .then(res => {\r\n  //         setPlaces(res.data.pros)\r\n  //         console.log(\"place info\", place)\r\n  //       })\r\n  // }, [])\r\n\r\n\r\n\r\n  const add = () => {\r\n    setadded(false);\r\n    setTimeout(() => {\r\n      setadded(true);\r\n    }, 3000);\r\n  };\r\n\r\n\r\n\r\n  //handle on click send comment \r\n  const handleComment = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`http://localhost:5000/api/comment/${place._id}/${props.user._id}`, comment)\r\n      .then(res => {\r\n        console.log(\"comment info\", res)\r\n      })\r\n      .catch(err => console.log(err));\r\n    setFlag(pre => !pre)\r\n  }\r\n\r\n\r\n\r\n  const allComment = place.comments && place.comments.map(comment => {\r\n    return (\r\n      <p>{comment.text}</p>\r\n    )\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!added && <MDBAlert color=\"danger\">adedd to place List</MDBAlert>}\r\n      <MDBContainer\r\n        style={{ height: \"100%\", width: \"100%\", paddingTop: \"10rem\" }}\r\n        className=\"mt-5  d-flex justify-content-center align-items-center\"\r\n      >\r\n        <MDBRow>\r\n          <MDBCol style={{ maxWidth: \"40rem\" }}>\r\n            <MDBCard reverse>\r\n              <MDBCardImage\r\n                style={{ height: '20rem', width: \"100%\" }}\r\n                className=\"cardPhoto\"\r\n                cascade\r\n                src={place.image}\r\n              />\r\n              <MDBCardBody cascade className=\"text-center\">\r\n                <MDBCardTitle>{place.name}</MDBCardTitle>\r\n                <h5 className=\"indigo-text\">\r\n                  <strong>{place.category}</strong>\r\n                </h5>\r\n                <MDBCardText>{place.description}</MDBCardText>\r\n                <MDBBtn\r\n                  outline\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    addPlace();\r\n                    // add();\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                    Add To List\r\n                  </MDBBtn>\r\n                {errorRating && (\r\n                  // className=\"error-anim\"\r\n                  <div style={{ color: \"#C70039\" }}>\r\n                    Error! already reviewed\r\n                    <span class=\"gradient\"></span>\r\n                    <span class=\"spotlight\"></span>\r\n                  </div>\r\n                )}\r\n                <ReactStars\r\n                  count={5}\r\n                  value={score}\r\n                  onChange={ratingChanged}\r\n                  size={24}\r\n                  color2={\"#ffd700\"}\r\n                />\r\n                <MDBBtn\r\n                  style={{ backgroundColor: \"black\", margin: \"10px\" }}\r\n                  size=\"md\"\r\n                  onClick={handleRating}\r\n                >\r\n                  Review\r\n                  </MDBBtn>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n          <MDBCol lg=\"6\" style={{ width: \"900px\" }}>\r\n            <h2>Join the Discussion!</h2>\r\n            <form>\r\n              <div className=\"grey-text\">\r\n                <MDBInput type=\"textarea\" rows=\"2\" label=\"Your Comment\" name=\"text\" icon=\"pencil-alt\" onChange={(e) => onChangeInput(e)} />\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <MDBBtn outline color=\"secondary\" onClick={handleComment}>\r\n                  Comment\r\n                          <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\r\n                </MDBBtn>\r\n                <div className=\"grey-text\">\r\n                  {allComment}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, BrowserRouter } from \"react-router-dom\";\r\nimport Axios from 'axios'\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBIcon, MDBRow, MDBCol, MDBAlert, MDBContainer, MDBBtn } from 'mdbreact';\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport ShowOnePlace from './ShowOnePlace';\r\n\r\nexport default function Home(props) {\r\n\r\n    const [places, setPlaces] = useState([])\r\n    const [category, setCategory] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState()\r\n    const [filterPlaces, setFilterPlaces] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/api/place\")\r\n            .then(res => {\r\n                setPlaces(res.data.result)\r\n                setFilterPlaces(res.data.result)\r\n                console.log(\"Places info:\", places)\r\n\r\n                let categories = res.data.result.map(place => place.category)\r\n                categories.unshift('All Places')\r\n                setCategory(Array.from(new Set(categories)))\r\n            })\r\n    }, [])\r\n\r\n\r\n    const filteredPlaces = filterPlaces.map(place => {\r\n\r\n        return (\r\n            <Link to={`/show/${place._id}`}>\r\n                <MDBCol className='placeItem' md=\"4\" style={{ maxWidth: \"20rem\" }}>\r\n                    <MDBCard reverse>\r\n                        <MDBCardImage className=\"cardPhoto\" cascade style={{ height: '20rem', width: \"100%\" }} src={place.image} />\r\n                        <MDBCardBody cascade className=\"text-center\">\r\n                            <MDBCardTitle>{place.name}</MDBCardTitle>\r\n                            <p>\r\n                                Read more\r\n                            <MDBIcon icon='angle-double-right' className='ml-2' />\r\n                            </p>\r\n\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n\r\n    //function to filter the place by the type \r\n    const onChangeHandler = (e) => {\r\n        console.log(\"onChangeHandler\")\r\n        let value = e\r\n\r\n        console.log(value)\r\n        setSelectedCategory(value)\r\n        if (value == 'All Places') {\r\n            setFilterPlaces(places)\r\n        } else {\r\n            let filter = places.filter(place => place.category == value)\r\n            setFilterPlaces(filter)\r\n        }\r\n    }\r\n\r\n    let allSelect = category.map(ele => <MDBDropdownItem onClick={() => onChangeHandler(ele)}>{ele}</MDBDropdownItem>)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <br />\r\n            <br />\r\n            <h1 className='dark-text mt-3  d-flex justify-content-center align-items-center '>ℝ𝕆𝕌ℕ𝔻</h1>\r\n            <MDBDropdown\r\n                style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\r\n                className='mt-5  d-flex justify-content-center align-items-center '\r\n            >\r\n                <MDBDropdownToggle caret className=\"mt-3\" gradient=\"deep-blue\" style={{ color: \"black\" }}>\r\n                    Where - 2 - Go\r\n         </MDBDropdownToggle>\r\n                <MDBDropdownMenu basic  >\r\n                    <MDBDropdownItem header > Jeddah Places</MDBDropdownItem>\r\n                    {allSelect}\r\n                </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n            <MDBRow className=\"placesContainer\" style={{ margin: \"0 auto\" }}>\r\n                {filteredPlaces}\r\n            </MDBRow>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Profile from \"../pages/Profile\"\r\n\r\n\r\nexport default function AuthRoute(props) {\r\n  if (props.auth.isLoggedIn) {\r\n    return (\r\n      <Route>\r\n        <Profile\r\n          setAuth={props.setAuth}\r\n          auth={props.auth}\r\n          user={props.user}\r\n          userProfile={props.userProfile}\r\n          setUserProfile={props.setUserProfile}\r\n        />\r\n      </Route>\r\n    );\r\n  } else {\r\n    return (\r\n      <Route>\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBRow } from \"mdbreact\";\r\n\r\nexport const AboutUs = () => {\r\n  return (\r\n    <>\r\n      <h1>About Us</h1>\r\n      <br />\r\n      <h2>Team Final-Battle</h2>\r\n    </>\r\n  )\r\n}","\r\nimport React from 'react'\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBRow } from \"mdbreact\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <>\r\n            <div className=\"footer\">\r\n\r\n                <footer className=\"footer-txt\">&copy; Copyright 2021. <a href=\"https://git.generalassemb.ly/Finall-Battle/final_battle\">Final-Battle </a> Team</footer>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link, BrowserRouter, useParams } from \"react-router-dom\";\r\nimport { MDBCard, MDBRow, MDBCardImage, MDBCardText, MDBIcon, MDBCardTitle, MDBCol, MDBLightbox, MDBBtn, MDBAlert, MDBCardBody, MDBSpinner } from 'mdbreact';\r\nimport Profile from \"../pages/Profile\"\r\nimport axios from \"axios\";\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n//  import API_URL from '../apiConfig.js'\r\nconst validtionSchima = Yup.object({\r\n    name: Yup.string()\r\n        .required('Name is required'),\r\n    email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n    password: Yup.string(),\r\n    confirmPassword: Yup.string().test('passwords-match', 'Passwords must match ', function (value) {\r\n        return this.parent.password === value;\r\n    }),\r\n    img: Yup.string().required(\"This Field is Required\")\r\n})\r\nexport default function EditUserInfo(props) {\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useState(props.user)\r\n    const { id } = useParams()\r\n    console.log(props)\r\n    const user = {\r\n        name: userInfo.name,\r\n        email: userInfo.email,\r\n        password: '',\r\n        confirmPassword: \"\",\r\n        img: userInfo.img\r\n    }\r\n    console.log('User const ==>', user)\r\n    // to add the user info to database\r\n    const onSubmit = (values) => {\r\n        // let userId = props.userProfile._id\r\n        axios\r\n            .post(`http://localhost:5000/api/user/edituserinfo/${id}`, values)\r\n            .then((res) => {\r\n                console.log(\"res.data.user from profile update: \", res.data.user)\r\n                props.setUserProfile(values)\r\n                let userdetails = {\r\n                    name: values.name,\r\n                    email: values.email\r\n                }\r\n                setUserInfo(userdetails)\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    // const uploadImagefunc = (e) => {\r\n    //     var formdata = new FormData();\r\n    //     formdata.append(\"image\", e.target.files[0]);\r\n    //     axios.post(\"https://api.imgur.com/3/image\", formdata, { headers: { \"Authorization\": \"Client-ID 218eb66b0d739ed\" } })\r\n    //         .then(result => console.log(result.data.data.link))\r\n    //         .catch(error => console.log('error', error));\r\n    // }\r\n    // console.log(image)\r\n    return (\r\n        <>\r\n            {userInfo.name && userInfo.email == \"admin@admin.com\" ?\r\n                <Link to={`/create`}>\r\n                    ℂℝ𝔼𝔸𝕋𝔼\r\n                    </Link>\r\n                : <Formik\r\n                    initialValues={userInfo}\r\n                    // validationSchema={validtionSchima}\r\n                    onSubmit={(values) => onSubmit(values)}\r\n                >\r\n                    <FormikForm className=\"mt-5\" style={{ color: \"black\" }}\r\n                    >\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"4\" md=\"12\" className=\"mb-lg-0 mb-4\">\r\n                                <MDBCard testimonial>\r\n                                    <MDBCardBody>\r\n                                        <MDBCardTitle>  <h4 className=\"font-weight-bold mb-4\">{userInfo.name ? userInfo.name : userInfo.name}</h4></MDBCardTitle>\r\n                                        {/* <MDBCardTitle>  <h4 className=\"font-weight-bold mb-4\">{userInfo.name}</h4></MDBCardTitle> */}\r\n                                        <hr />\r\n                                        <MDBCardText>  <p className=\"dark-grey-text mt-4\">\r\n                                            <MDBIcon icon=\"quote-left\" className=\"pr-2\" />\r\n                                            {userInfo.name ? userInfo.email : userInfo.email}\r\n                                            {/* {userInfo.email} */}\r\n                                        </p></MDBCardText>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"4\" md=\"12\" className=\"mb-lg-0 mb-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"formGroupExampleInput\"> Change Name : </label>\r\n                                    <Field\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                    />\r\n                                    <ErrorMessage name=\"name\" render={(msg) => <MDBAlert color=\"danger\" >\r\n                                        {msg}\r\n                                    </MDBAlert>} />\r\n                                    <label htmlFor=\"formGroupExampleInput\">Change Email : </label>\r\n                                    <Field\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                    />\r\n                                    <ErrorMessage name=\"email\" render={(msg) => <MDBAlert color=\"danger\" >\r\n                                        {msg}\r\n                                    </MDBAlert>} />\r\n                                    <label htmlFor=\"formGroupExampleInput\"> Change password : </label>\r\n                                    <Field\r\n                                        type=\"Password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                    />\r\n                                    <MDBBtn type=\"submit\" style={{ margin: '20px 0px 20px 140px', color: \"black\" }} gradient=\"deep-blue\">\r\n                                        Save\r\n                                        </MDBBtn>\r\n                                </div>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </FormikForm>\r\n                </Formik>\r\n                //  <div className=\"spinner-border\" role=\"status\">\r\n                //     <span className=\"sr-only\">Loading...</span>\r\n                // </div> \r\n            }\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBCard, MDBAnimation, MDBCardBody, MDBAlert } from 'mdbreact';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\n\r\nexport default function EditPlace(props) {\r\n  const { placeId } = useParams();\r\n  const history = useHistory();\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [flag, setFlag] = useState(false)\r\n  const handleOnChangeDate = (date) => {\r\n\r\n    setStartDate(date)\r\n\r\n    setPlaceFields((prevState) => ({\r\n      ...prevState, date: date\r\n    }))\r\n  }\r\n\r\n  const [placetFields, setPlaceFields] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    image: \"\",\r\n    category: \"Choose the place\",\r\n    location: \"\",\r\n    workingHours: \"\",\r\n\r\n  });\r\n\r\n  const getPlace = () => {\r\n    console.log(placeId);\r\n    axios\r\n      .get(`http://localhost:5000/api/place/${placeId}`)\r\n      .then(data => {\r\n        setPlaceFields(data.data.pros);\r\n        console.log(data.data.pros)\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPlace();\r\n  }, [flag])\r\n\r\n  const onChangeInput = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setPlaceFields({\r\n      ...placetFields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (placeId) => {\r\n    axios.put(`http://localhost:5000/api/place/${placeId}`, placetFields)\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    alert(\"Edited successfully\");\r\n    history.push(\"/profile\");\r\n    setFlag(pre => !pre)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"classicformpage\">\r\n\r\n      <MDBContainer\r\n        style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\r\n        className='mt-5  d-flex justify-content-center align-items-center'\r\n      >\r\n        <MDBCol md='6' xl='5' className='mb-4' >\r\n          <MDBAnimation type='fadeInRight' delay='.3s'>\r\n            <MDBCard id='classic-card'>\r\n              <h1 className='text-center mt-5' ><MDBIcon icon='' />\r\n                        𝔼𝕕𝕚𝕥\r\n                      </h1>\r\n              <MDBCardBody className='white-text'>\r\n\r\n                <hr className='hr-light' />\r\n\r\n                <MDBInput\r\n                  /* className='white-text'\r\n                  iconClass='white-text' */\r\n                  label='Name'\r\n                  name=\"name\"\r\n                  onChange={(e) => onChangeInput(e)}\r\n                  value={placetFields.name}\r\n                />\r\n                <MDBInput\r\n                  /*    className='white-text'\r\n                     iconClass='white-text' */\r\n                  label='Description'\r\n                  name=\"description\"\r\n                  onChange={(e) => onChangeInput(e)}\r\n                  value={placetFields.description}\r\n                />\r\n\r\n                <MDBInput\r\n                  label='Image'\r\n                  name=\"image\"\r\n                  value={placetFields.image}\r\n                  /* onChange={(e) =>uploadImageHundler(e)} type=\"file\" */\r\n                  onChange={(e) => onChangeInput(e)}\r\n\r\n                />\r\n\r\n                <MDBInput\r\n                  /* className='white-text'\r\n                  iconClass='white-text' */\r\n                  label='Location'\r\n                  name=\"location\"\r\n                  onChange={(e) => onChangeInput(e)}\r\n                  value={placetFields.location}\r\n                />\r\n\r\n\r\n                <MDBInput\r\n                  /* className='white-text'\r\n                  iconClass='white-text' */\r\n                  label='working Hours'\r\n                  name=\"workingHours\"\r\n                  value={placetFields.workingHours}\r\n                  onChange={(e) => onChangeInput(e)}\r\n\r\n                />\r\n\r\n\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  selected={startDate}\r\n                  value={placetFields.date}\r\n                  onChange={(date) => handleOnChangeDate(date)} />\r\n\r\n                <br /><br />\r\n\r\n                <select className=\"browser-default custom-select\" name=\"category\" value={placetFields.category} onChange={(e) => onChangeInput(e)}>\r\n                  <option >Choose the place</option>\r\n                  <option>cafe</option>\r\n                  <option >restaurant</option>\r\n                  <option >entertainment</option>\r\n                  <option >concert</option>\r\n\r\n                </select>\r\n\r\n                <div className='text-center mt-4 black-text'>\r\n                  <MDBBtn onClick={() => handleEdit(placeId)}>Edit</MDBBtn>\r\n                </div>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBAnimation>\r\n        </MDBCol>\r\n      </MDBContainer>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\r\nimport SignUp from \"./components/action/SignUp\"\r\nimport Login from \"./components/action/Login\"\r\nimport Create from './components/action/Create';\r\nimport NavBar from './components/action/NavBar';\r\nimport Home from \"./components/pages/Home\";\r\nimport ShowOnePlace from './components/pages/ShowOnePlace';\r\nimport AuthRoute from './components/action/AuthRoute';\r\nimport { AboutUs } from './components/pages/AboutUs';\r\nimport { Footer } from './components/pages/Footer';\r\nimport EditUserInfo from \"./components/pages/EditUserInfo\"\r\nimport axios from \"axios\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport EditPlace from \"./components/action/EditPlace\"\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  const [loadingData, setLoadingData] = useState(false);\r\n  const [auth, setAuth] = useState({ currentUser: null, isLoggedIn: false });\r\n  const [userProfile, setUserProfile] = useState({})\r\n  const [dataLoaded, setDataloaded] = useState(false)\r\n  const [userData, setUserData] = useState({ currentDataUser: null })\r\n\r\n\r\n  const userLogin = () => {\r\n    if (localStorage.jwtToken) {\r\n      const jwtToken = localStorage.jwtToken;\r\n      const currentUser = jwt_decode(jwtToken, \"SECRET\").user;\r\n      const currentPlace = jwt_decode(jwtToken, \"SECRET\").place;\r\n      const currentDataUser = jwt_decode(jwtToken, \"SECRET\").user;\r\n      setAuth({ currentUser, isLoggedIn: true });\r\n      // setUserData({ currentDataUser });\r\n      getProfile(currentUser);\r\n      // getBook(currentBook)\r\n    } else {\r\n      setAuth({ currentUser: null, isLoggedIn: false });\r\n    }\r\n    // setDataloading(true)\r\n    setDataloaded(true)\r\n    console.log(\"The current User is: \", auth.currentUser);\r\n    console.log(\"The current DATA User  \", userData.currentDataUser);\r\n\r\n  };\r\n  const getProfile = async (currentUser) => {\r\n    const { data: { user } } = await axios.get(`http://localhost:5000/api/users/profile/${currentUser._id}`)\r\n    console.log('Loaded user profile: ', user)\r\n    setUserProfile(user)\r\n  }\r\n\r\n  useEffect(userLogin, []);\r\n  useEffect(() => {\r\n    if (userProfile.name) {\r\n      setDataloaded(true)\r\n    }\r\n  }, [userProfile])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"classicformpage\">\r\n\r\n        <Router>\r\n          <NavBar loginCallback={userLogin} isLoggedIn={auth.isLoggedIn} />\r\n          <Switch>\r\n\r\n            <Route path=\"/profile\">\r\n              <AuthRoute\r\n                setAuth={setAuth}\r\n                auth={auth}\r\n                user={auth.currentUser}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n\r\n            <Route path=\"/login\">\r\n              <Login loginCallback={userLogin} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/edit/:placeId\">\r\n              <EditPlace user={auth.currentUser} />\r\n            </Route>\r\n\r\n            <Route path=\"/show/:id\">\r\n              <ShowOnePlace\r\n                user={auth.currentUser}\r\n                isLoggedIn={auth.isLoggedIn}\r\n              />\r\n            </Route>\r\n\r\n            <Route path=\"/edituserinfo/:id\">\r\n              <EditUserInfo\r\n                setAuth={setAuth}\r\n                auth={auth}\r\n                user={auth.currentUser}\r\n                userProfile={userProfile}\r\n                setUserProfile={setUserProfile}\r\n              />\r\n            </Route>\r\n\r\n            <Route path=\"/create\">\r\n              <Create\r\n                user={auth.currentUser}\r\n                isLoggedIn={auth.isLoggedIn}\r\n              />\r\n            </Route>\r\n\r\n            <Route path=\"/signup\">\r\n              <SignUp />\r\n            </Route>\r\n\r\n            <Route path=\"/aboutus\">\r\n              <AboutUs />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n\r\n        {/* : <Spinner animation=\"border\" />\r\n      } */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\r\n'bootstrap-css-only/css/bootstrap.min.css'; import\r\n'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}