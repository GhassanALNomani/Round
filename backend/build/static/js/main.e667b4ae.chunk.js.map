{"version":3,"sources":["apiConfig.js","components/action/SignUp.jsx","components/action/NavBar.jsx","components/action/Login.jsx","components/pages/Profile.jsx","components/action/Create.jsx","components/pages/ShowOnePlace.jsx","components/pages/Home.jsx","components/action/AuthRoute.jsx","components/pages/AboutUs.jsx","components/pages/Footer.jsx","components/pages/EditUserInfo.jsx","components/action/EditPlace.jsx","components/pages/OneItemList.jsx","components/pages/UserList.jsx","App.js","reportWebVitals.js","index.js"],"names":["apiUrls","development","production","API_URL","window","location","hostname","emailRegex","Yup","name","required","email","password","min","max","Signup","history","useHistory","useState","user","setUser","formErrors","setFormErrors","onChangeInput","target","value","console","log","valid","errors","key","test","filter","err","push","msg","style","height","width","paddingTop","className","md","xl","type","delay","id","label","icon","onChange","e","map","error","color","gradient","onClick","event","preventDefault","length","axios","post","then","res","data","alert","catch","NavBar","props","backgroundColor","dark","expand","href","left","fontSize","active","to","isLoggedIn","right","far","localStorage","removeItem","loginCallback","Login","register","setRegister","credentials","setCredentials","token","setItem","Profile","places","setPlaces","flag","useEffect","get","result","allplaces","place","maxWidth","reverse","cascade","src","image","_id","fontWeight","placeId","delete","item","activeClassName","userProfile","fab","Create","Date","description","category","workingHours","useParams","setUserTovisit","errorRating","setErrorRating","score","setScore","added","setadded","comment","setComment","pros","onePlace","total","reviews","reduce","a","b","allComment","comments","text","date","outline","put","userId","setTimeout","class","count","newRating","size","color2","margin","body","userName","productId","lg","rows","Home","setCategory","setSelectedCategory","filterPlaces","setFilterPlaces","Axios","categories","unshift","Array","from","Set","filteredPlaces","allSelect","ele","onChangeHandler","caret","basic","header","AuthRoute","auth","setAuth","setUserProfile","AboutUs","Footer","confirmPassword","this","parent","img","EditUserInfo","userInfo","setUserInfo","initialValues","onSubmit","values","userdetails","testimonial","htmlFor","render","EditPlace","startDate","setStartDate","setFlag","placetFields","setPlaceFields","selected","prevState","handleOnChangeDate","response","pre","handleEdit","OneItemList","scope","deleteplace","placesToVisit","setPlacesToVisit","currentUser","change","setChange","dismiss","i","plaicId","App","setDataloaded","currentDataUser","userData","userLogin","jwtToken","jwt_decode","getProfile","path","exact","ShowOnePlace","UserList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e667b4ae.chunk.js","sourcesContent":["const EXPRESS_PORT = 5000;\r\nconst apiUrls = {\r\n  development: `http://localhost:${EXPRESS_PORT}`,\r\n  production: `https://round4.herokuapp.com`, \r\n};\r\nconst API_URL =\r\n  window.location.hostname === 'localhost'\r\n    ? apiUrls.development\r\n    : apiUrls.production;\r\n\r\nexport default API_URL;","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MDBAnimation, MDBBtn, MDBCard, MDBCardBody, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBView, MDBAlert } from 'mdbreact';\r\nimport axios from \"axios\";\r\nimport API_URL from \"../../apiConfig\";\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nconst validtionSchima = Yup.object({\r\n  name: Yup.string().required(\"Enter your Name please\"),\r\n  email: Yup.string().required(\"Enter your email please\").email(\"example@example.com\"),\r\n  password: Yup.string().required(\"Enter your passwor please!!\").min(8, \"must be more than 8\").max(20, \"whatEver\")\r\n})\r\n\r\nconst emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}/g\r\nconst whiteSpace = /\\s/g\r\n\r\nexport default function Signup() {\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  //const [register, setRegister] = useState(true);\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [formErrors, setFormErrors] = useState([])\r\n  const onChangeInput = ({ target: { name, value } }) => {\r\n    setUser({ ...user, [name]: value });\r\n    console.log(user);\r\n  };\r\n\r\n  function valid() {\r\n\r\n    let errors = []\r\n  \r\n    \r\n    for (var key in user) {\r\n      if (key == \"email\" && user['email'] != \"\") {\r\n        console.log('check email regex', emailRegex.test(user['email']))\r\n        console.log('check email regex', emailRegex.test('ali@ali.com'))\r\n        if(emailRegex.test(user['email'])){\r\n          errors.filter(err=>err.name == \"email\")\r\n        }else{\r\n          errors.push({name: \"email\", msg: \"Please enter a valid Email\"})\r\n        }\r\n      }\r\n      if(user[key] == \"\"){\r\n        errors.push({name: key, msg: \"Please fill this field\"})\r\n      }else{\r\n        errors.filter(err=>err.name == key)\r\n      }\r\n    }\r\n    setFormErrors(errors)\r\n    return errors\r\n  }\r\n\r\n\r\n  const onSubmit = (event) => {\r\n    console.log(user)\r\n    event.preventDefault(); \r\n    console.log(valid())\r\n    valid()\r\n    console.log(user)\r\n    let errors = valid()\r\n    if (errors.length > 0) {\r\n      \r\n\r\n    } else {\r\n      axios\r\n        .post(`${API_URL}/api/user/signup`, user)\r\n        .then((res) => {\r\n          const user = res.data.user;\r\n          if (user) {\r\n            history.push(\"/home\");\r\n          } else {\r\n            alert(\"Error! check your information and try again\")\r\n            // setTimeout(() => {\r\n            //   setRegister(false);\r\n            // }, 1000);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div>\r\n        <MDBView>\r\n          {/* <FormikForm> */}\r\n          <MDBContainer\r\n            style={{ height: '100%', width: '100%', paddingTop: '5rem' }}\r\n            className=' d-flex justify-content-center align-items-center'\r\n          >\r\n\r\n            <MDBCol md='6' xl='5' className='mb-4'>\r\n              <MDBAnimation type='fadeInRight' delay='.3s'>\r\n                <MDBCard id='classic-card'>\r\n                  <h1 className='text-center mt-5' >\r\n                    𝕊𝕀𝔾ℕ 𝕌ℙ\r\n                      </h1>\r\n                  <MDBCardBody className='white-text'>\r\n\r\n                    {/*                       <hr className='hr-light' />\r\n */}\r\n                    <MDBInput\r\n                      /* className='white-text'\r\n                      iconClass='white-text' */\r\n                      // as={Field}\r\n                      label='Enter your name'\r\n                      icon='user'\r\n                      name=\"name\"\r\n                      onChange={(e) => onChangeInput(e)}\r\n                    />\r\n                    {formErrors.map(error => {\r\n                      if(error.name == \"name\")\r\n                      return <p key={error.name} style={{color: \"red\"}}>{error.msg}</p>\r\n                    })}\r\n                    \r\n                    \r\n                    {/* <ErrorMessage name=\"name\" render={(msg) => <MDBAlert color=\"danger\" variant={\"danger\"}>\r\n                          {msg}\r\n                        </MDBAlert>} /> */}\r\n\r\n                    <MDBInput\r\n                      /*    className='white-text'\r\n                         iconClass='white-text' */\r\n                      // as={Field}\r\n                      label='Enter your email'\r\n                      icon='envelope'\r\n                      name=\"email\"\r\n                      onChange={(e) => onChangeInput(e)} />\r\n                      {formErrors.map(error => {\r\n                      if(error.name == \"email\")\r\n                      return <p key={error.name} style={{color: \"red\"}}>{error.msg}</p>\r\n                    })}\r\n                    {/* <ErrorMessage name=\"name\" render={(msg) => <MDBAlert color=\"danger\" variant={\"danger\"}>\r\n                          {msg}\r\n                        </MDBAlert>} /> */}\r\n\r\n                    <MDBInput\r\n                      // as={Field}\r\n                      label='Enter your password'\r\n                      icon='lock'\r\n                      type='password'\r\n                      name=\"password\"\r\n                      onChange={(e) => onChangeInput(e)} />\r\n                      {formErrors.map(error => {\r\n                      if(error.name == \"password\")\r\n                      return <p key={error.name} style={{color: \"red\"}}>{error.msg}</p>\r\n                    })}\r\n                    {/* <ErrorMessage name=\"name\" render={(msg) => <MDBAlert color=\"danger\" variant={\"danger\"}>\r\n                          {msg}\r\n                        </MDBAlert>} /> */}\r\n\r\n                    <div className='text-center mt-4 black-text'>\r\n\r\n                      <MDBBtn gradient=\"deep-blue\" onClick={(e) => onSubmit(e)}>Sign Up</MDBBtn>\r\n\r\n                    </div>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n\r\n          </MDBContainer>\r\n          {/* </FormikForm> */}\r\n        </MDBView>\r\n\r\n\r\n      </div>\r\n      {/* </Formik> */}\r\n    </>\r\n  )\r\n}\r\n\r\n","\r\nimport \"../../App.css\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\r\nimport { useHistory } from 'react-router-dom';\r\nexport default function NavBar(props) {\r\n    const bgPink = { backgroundColor: '#a9dceb' }\r\n    const history = useHistory();\r\n\r\n\r\n    const logOut = () => {\r\n        console.log(\"Logging Out!\");\r\n        localStorage.removeItem(\"jwtToken\");\r\n        props.loginCallback();\r\n        history.push('/');\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <MDBNavbar style={bgPink} dark expand=\"md\"  >\r\n                    {/*                 scrolling fixed=\"top\"\r\n */}                    <MDBNavbarBrand href=\"/\">\r\n                        <strong></strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarNav left style={{ fontSize: \"25px\" }}>\r\n                        <MDBNavItem active>\r\n                            <MDBNavLink to=\"/\" style={{ color: \"black\" }}><MDBIcon icon=\"home\" /> ℍ𝕠𝕞𝕖</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"/aboutus\" style={{ color: \"black\" }}> <MDBIcon icon=\"info\" /> 𝔸𝕓𝕠𝕦𝕥 𝕦𝕤</MDBNavLink>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    {!props.isLoggedIn ? <>\r\n\r\n                        <MDBNavbarNav right style={{ fontSize: \"25px\" }}>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/signup\" style={{ color: \"black\" }}><MDBIcon icon=\"user-plus\" /> 𝕊𝕚𝕘𝕟𝕦𝕡 </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/login\" style={{ color: \"black\" }}> <MDBIcon icon=\"sign-in-alt\" /> 𝕃𝕠𝕘𝕚𝕟 </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </> : <>\r\n                            <MDBNavbarNav right style={{ fontSize: \"25px\" }}>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"/profile\" style={{ color: \"black\" }}><MDBIcon far icon=\"user\" /> ℙ𝕣𝕠𝕗𝕚𝕝𝕖 </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem onClick={() => logOut()}>\r\n                                    <MDBNavLink to=\"/logout\" style={{ color: \"black\" }}> <MDBIcon icon=\"sign-out-alt\" /> 𝕃𝕠𝕘𝕠𝕦𝕥 </MDBNavLink>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </>}\r\n\r\n\r\n                </MDBNavbar>\r\n\r\n            </header>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { MDBAnimation, MDBCard, MDBCardBody, MDBCol, MDBIcon, MDBInput, MDBContainer, MDBBtn, MDBLink, MDBAlert } from 'mdbreact';\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport API_URL from '../../apiConfig';\r\n//import API_URL from \"../../apiConfig\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const [register, setRegister] = useState(true); // to show aleart\r\n\r\n\r\n  const history = useHistory();\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n\r\n\r\n  const onChangeInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setCredentials({\r\n      ...credentials,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`${API_URL}/api/user/login`, credentials)\r\n      .then((res) => {\r\n        console.log(\"Express backend /login response\", res);\r\n\r\n        const token = res.data.token;\r\n        const msg = res.data.msg;\r\n\r\n        if (token) {\r\n          localStorage.setItem(\"jwtToken\", token);\r\n          props.loginCallback();\r\n          alert(\"Logged in successfully, Welcome\")\r\n          history.push(\"/profile\"); // /profile\r\n        } else {\r\n          console.log(\"Login error: \", msg);\r\n          setRegister(false)\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!register && (\r\n        <MDBAlert color=\"danger\">\r\n          The email address or password is incorrect. Please retry...\r\n        </MDBAlert>\r\n      )}\r\n      <div  >\r\n        <MDBContainer\r\n          style={{ height: '100%', width: '100%', paddingTop: '5rem' }}\r\n          className=' d-flex justify-content-center align-items-center'\r\n        >\r\n          <MDBCol md='6' xl='5' className='mb-4'>\r\n            <MDBAnimation type='fadeInRight' delay='.3s'>\r\n              <MDBCard id='classic-card'>\r\n                <h1 className='text-center mt-5'>\r\n                  𝕃𝕠𝕘 𝕀𝕟\r\n                      </h1>\r\n                <MDBCardBody className='white-text'>\r\n\r\n\r\n                  <hr className='hr-light' />\r\n\r\n                  <MDBInput\r\n                    /*    className='white-text'\r\n                       iconClass='white-text' */\r\n                    label='Your email'\r\n                    icon='envelope'\r\n                    type='email'\r\n                    name=\"email\"\r\n                    onChange={(e) => onChangeInput(e)}\r\n                  />\r\n                  <MDBInput\r\n                    label='Your password'\r\n                    icon='lock'\r\n                    type='password'\r\n                    name=\"password\"\r\n                    onChange={(e) => onChangeInput(e)}\r\n                  />\r\n                  <div className='text-center mt-4 black-text '>\r\n                    <MDBBtn gradient=\"deep-blue\" onClick={(e) => onSubmit(e)}> Log In</MDBBtn>\r\n                  </div>\r\n                  {/* <div className='text-center'>\r\n                  <MDBLink to='#'  >\r\n                    forget password?\r\n                    </MDBLink>\r\n                </div> */}\r\n                  <div className='text-center'>\r\n\r\n                    <h4>New User?</h4>\r\n                    <MDBLink to='/signup'  >\r\n                      Sign Up\r\n                    </MDBLink>\r\n                  </div>\r\n\r\n\r\n\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBAnimation>\r\n          </MDBCol>\r\n        </MDBContainer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon, MDBBtn } from 'mdbreact';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBContainer, MDBCardTitle, MDBRow, MDBMask } from \"mdbreact\";\r\n\r\nimport API_URL from \"../../apiConfig\";\r\nimport axios from 'axios'\r\n\r\nconst Profile = (props) => {\r\n    const [places, setPlaces] = useState([])\r\n\r\n    const [flag, setFlag] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        axios.get(`${API_URL}/api/place`)\r\n            .then(res => {\r\n                setPlaces(res.data.result)\r\n                console.log(\"place info:\", places)\r\n\r\n            })\r\n    }, [flag])\r\n\r\n    const handleDelete = (placeId) => {\r\n        console.log(\"Delete\", placeId)\r\n\r\n        axios.delete(`${API_URL}/api/place/${placeId}`) ///${props.user._id}\r\n            .then(data => {\r\n                console.log(\"delete data \", data)\r\n\r\n            })\r\n        //.catch((err) => console.log(err));\r\n        setPlaces(places.filter(item => {\r\n            return item._id !== placeId\r\n        }));\r\n    }\r\n\r\n\r\n    const allplaces = places.map(place => {\r\n        return (\r\n\r\n            <MDBCol className='' md=\"4\" style={{ maxWidth: \"40rem\" }}>\r\n                <MDBCard reverse className=\"cardPadding\">\r\n                    <MDBCardImage cascade style={{ height: '20rem', width: \"100%\" }} src={place.image} />\r\n                    <MDBCardBody cascade className=\"text-center\">\r\n                        <MDBCardTitle>{place.name}</MDBCardTitle>\r\n                        <Link to={`/edit/${place._id}`}>\r\n                        <MDBBtn style={{ fontSize: \"15px\", fontWeight: \"bold\", color: \"black\" }} gradient=\"deep-blue\">\r\n                            <MDBIcon icon=\"edit\" className=\"iconsStyle \" />\r\n                            Edit\r\n                        </MDBBtn>\r\n                        </Link>\r\n                        <MDBBtn onClick={() => handleDelete(place._id)} style={{ fontSize: \"15px\", fontWeight: \"bold\", color: \"black\" }} gradient=\"deep-blue\">\r\n                            <MDBIcon icon=\"trash-alt\" className=\"iconsStyle \" /> Delete\r\n                        </MDBBtn>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBCol>\r\n\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <MDBContainer>\r\n                {props.user.email === \"admin@admin.com\" ? <>\r\n                    <h2 className=\"headerStyleAdmin\">\r\n                        <MDBIcon icon=\"user-secret\" className=\"iconsStyle mb-3\" />\r\n                            Admin Profile\r\n                    </h2>\r\n\r\n                    <MDBRow className=\"styleProfile\">\r\n                        <NavLink to=\"/create\" activeClassName=\"activeClass\" style={{ fontSize: \"40px\" }} style={{ color: \"#a9dceb\" }} className=\"createHover\">\r\n                            <MDBIcon far icon=\"plus-square\" className=\"iconsStyle fixPadding iconsCreateStyle\" />\r\n                            <span className=\"iconsCreateStyle\">Create</span>\r\n                        </NavLink>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        {allplaces}\r\n                    </MDBRow>\r\n\r\n\r\n                </> : <>\r\n                        <h2 className=\"headerStyleAdmin\">\r\n                            <MDBIcon icon=\"user-circle\" className=\"iconsStyle mb-3\" />\r\n                            User Profile : {props.userProfile.name}\r\n                        </h2>\r\n                        <MDBRow className=\"styleProfile stylePaddingUser\">\r\n                            <NavLink to=\"/tovisit\" activeClassName=\"activeClass\" style={{ fontSize: \"40px\" }} style={{ color: \"#a9dceb\" }} className=\"createHover styleBorder\">\r\n                                <MDBIcon fab icon=\"gratipay\" className=\"iconsStyle fixPadding iconsCreateStyle\" />\r\n                                <span className=\"iconsCreateStyle styleText\">Place To Visit</span>\r\n\r\n                            </NavLink>\r\n                            <NavLink to={`/edituserinfo/${props.user._id}`} activeClassName=\"activeClass\" style={{ fontSize: \"40px\" }} style={{ color: \"#a9dceb\" }} className=\"createHover\">\r\n                                <MDBIcon icon=\"user-edit\" className=\"iconsStyle fixPadding iconsCreateStyle\" />\r\n                                <span className=\"iconsCreateStyle\">Edit User Information</span>\r\n                            </NavLink>\r\n                        </MDBRow>\r\n                    </>}\r\n            </MDBContainer>\r\n        </>\r\n    );\r\n}\r\nexport default Profile;","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBCard, MDBAnimation, MDBCardBody} from 'mdbreact';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Profile from \"../pages/Profile\"\r\nimport moment from 'moment'\r\nimport API_URL from '../../apiConfig';\r\n\r\nfunction valid(object) {\r\n  let flag = true\r\n  for (var key in object) {\r\n    if (object[key] == \" \") {\r\n\r\n      flag = false\r\n    }\r\n  }\r\n  return flag\r\n}\r\n\r\n\r\n\r\nexport default function Create(props) {\r\nconsole.log(props)\r\n    const history = useHistory();\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    const [placeFields, setPlaceFields] = useState({\r\n      name: \"\",\r\n      description: \"\",\r\n      image: \"\",\r\n      category: \"Choose the place\",\r\n      location: \"\",\r\n      workingHours : \"\",\r\n    \r\n  });\r\n\r\n\r\n\r\nconst handleOnChangeDate = (date) => {\r\n\r\n  setStartDate(date)\r\n\r\n  setPlaceFields((prevState)=>({\r\n    ...prevState, date: date  \r\n  }))\r\n}\r\n\r\n\r\nconst onSubmit = (e) => {\r\n  console.log(placeFields);\r\n  e.preventDefault();\r\n  console.log(valid(placeFields))\r\n  if (!valid(placeFields)) {\r\n    alert(\"somting is missing ! \")\r\n\r\n  } else {\r\n\r\n        axios\r\n        .post(`${API_URL}/api/place/create`, placeFields) \r\n        .then((res) => {\r\n\r\n                const place = res.data;\r\n\r\n                console.log(\"response data: \", res.data)\r\n\r\n                if (place) {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                    alert(\"Error! check your information and try again\")\r\n                    }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n\r\n    const onChangeInput = (event) => {\r\n      const { name, value } = event.target;\r\n      setPlaceFields({\r\n          ...placeFields,\r\n          [name]: value,\r\n      });\r\n      console.log(placeFields)\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n<>\r\n\r\n{ props.user != null && props.user.email == \"admin@admin.com\"?      \r\n        <div >\r\n         \r\n            <MDBContainer\r\n            style={{ height: '100%', width: '100%', paddingTop: '6rem' }}\r\n            className='mt-5  d-flex justify-content-center align-items-center'\r\n            >\r\n             <MDBCol md='6' xl='5' className='mb-4' >\r\n                <MDBAnimation type='fadeInRight' delay='.3s'>\r\n                  <MDBCard id='classic-card'>\r\n                  <h1 className='text-center mt-5' ><MDBIcon icon='' />\r\n                       ℂℝ𝔼𝔸𝕋𝔼\r\n                      </h1>\r\n                    <MDBCardBody className='white-text'>\r\n                     \r\n                      <hr className='hr-light' />\r\n                    \r\n                      <MDBInput\r\n                        /* className='white-text'\r\n                        iconClass='white-text' */\r\n                        label='Name'\r\n                        name = \"name\"\r\n                        onChange={(e) => onChangeInput(e)}\r\n                      />\r\n                      <MDBInput\r\n                     /*    className='white-text'\r\n                        iconClass='white-text' */\r\n                        label='Description'\r\n                        name = \"description\"\r\n                        onChange={(e) => onChangeInput(e)}/>\r\n\r\n                      <MDBInput\r\n                        label='Image'\r\n                        name = \"image\"\r\n                        /* onChange={(e) =>uploadImageHundler(e)} type=\"file\" */\r\n                        onChange={(e) => onChangeInput(e)}/>\r\n \r\n                       <MDBInput\r\n                        /* className='white-text'\r\n                        iconClass='white-text' */\r\n                        label='Location'\r\n                        name = \"location\"\r\n                        onChange={(e) => onChangeInput(e)}\r\n                      /> \r\n                   \r\n\r\n                        <MDBInput\r\n                        /* className='white-text'\r\n                        iconClass='white-text' */\r\n                        label='working Hours'\r\n                        name = \"workingHours\"\r\n                        onChange={(e) => onChangeInput(e)}\r\n                      \r\n                      />     \r\n                      \r\n\r\n                       <DatePicker \r\n                       name = \"date\"\r\n                       selected={startDate}\r\n                       onChange={(date)=>handleOnChangeDate(date)} /> \r\n                       \r\n                             <br/><br/>\r\n                        \r\n                  <select className=\"browser-default custom-select\" name=\"category\" onChange={(e) => onChangeInput(e)}>   \r\n                    <option >Choose the place</option>\r\n                    <option>cafe</option>\r\n                    <option >restaurant</option>\r\n                    <option >entertainment</option>\r\n                    <option >concert</option>\r\n                  \r\n                 </select>\r\n\r\n                      <div className='text-center mt-4 black-text'>\r\n                        <MDBBtn gradient=\"deep-blue\" type=\"submit\" onClick={(e) => onSubmit(e)}>Submit</MDBBtn>\r\n                      </div>\r\n                    </MDBCardBody>\r\n                  </MDBCard>\r\n                </MDBAnimation>\r\n              </MDBCol>\r\n              </MDBContainer>\r\n        </div>\r\n        : <div>\r\n        <MDBContainer>\r\n         <h1 className=\"text-justify\" style={{fontSize: \"25px\"}}>Only the admin can access this page</h1>\r\n        </MDBContainer>\r\n         </div>}\r\n         </>\r\n    )\r\n} \r\n\r\n}","import {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBCardImage,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBAlert,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ReactStars from 'react-stars';\r\nimport API_URL from \"../../apiConfig\";\r\nexport default function (props) {\r\n  const [place, setPlaces] = useState([]) // you won't need the whole array of places when you get one place, and set the state \"selectPlace\" with its data\r\n  const { id } = useParams()\r\n  const [userTovisit, setUserTovisit] = useState()\r\n  // const [selectPlace, setSelectPlace] = useState(props.selectPlace) // delete this from everywhere, App.js\r\n  const [selectPlace, setSelectPlace] = useState({})\r\n  // const { name } = selectPlace\r\n  const [errorRating, setErrorRating] = useState(false)\r\n  const [score, setScore] = useState(5)\r\n  const [added, setadded] = useState(true);\r\n  const [comment, setComment] = useState({});\r\n  // const [allcomment, setAllComment] = useState([])\r\n  const onChangeInput = ({ target: { name, value } }) => {\r\n    setComment({ ...comment, [name]: value });\r\n    console.log(\"comment\", comment);\r\n  };\r\n  // git data\r\n  useEffect(() => {\r\n    axios.get(`${API_URL}/api/place/${id}`)\r\n      .then((res) => {\r\n        setPlaces(res.data.pros); // this returns one place so why use the \"places\" state // refactor state naming to indicate what data they hold, \"places\" \"toVisit\" \"onePlace\"\r\n        console.log(\"place info for comment\", place)\r\n        const onePlace = res.data.pros;\r\n        console.log(onePlace)\r\n        const total = onePlace.reviews.reduce((a, b) => a + (b[\"score\"] || 0), 0)\r\n        if (onePlace.reviews.length > 0) {\r\n          setScore(total / onePlace.reviews.length)\r\n        }\r\n        console.log(\"place info\", onePlace);\r\n      });\r\n  }, []);\r\n\r\n  const addPlace = () => {\r\n    console.log(props.user._id, place._id)\r\n    axios.put(`${API_URL}/api/tovisit/`, { userId: props.user._id, placeId: place._id })\r\n      .then(res => {\r\n        console.log(\"added to list\", res)\r\n        setUserTovisit(res.data);// places: if it's all places,why set? if it's user's  places, use another name to indicate it, for example \"userList\", \"toVisit\"\r\n      })\r\n  };\r\n\r\n  const handleRating = () => {\r\n    if (props.isLoggedIn) {\r\n      const body = {\r\n        userId: props.user._id,\r\n        score: score,\r\n        userName: props.user.name,\r\n        productId: id\r\n      }\r\n     \r\n      axios.post(`${API_URL}/api/place/review`, body)\r\n        .then(res => {\r\n          console.log(res)\r\n          console.log(\"reviewd done\")\r\n          if (res.data == \"Error! you already reviewed\") {\r\n            setErrorRating(true)\r\n          }\r\n          // update the state to show the rating\r\n        })\r\n    } else {\r\n      console.log(\"Login first\");\r\n    }\r\n  }\r\n\r\n  const ratingChanged = (newRating) => {\r\n    setScore(newRating)\r\n  }\r\n  const add = () => {\r\n    setadded(false);\r\n    setTimeout(() => {\r\n      setadded(true);\r\n    }, 3000);\r\n  };\r\n  \r\n  //handle on click send comment \r\n  const handleComment = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${API_URL}/api/comment/${place._id}/${props.user._id}`, comment)\r\n      .then(res => {\r\n        console.log(\"comment info\", res)\r\n        // update the state to show the new added comment \r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  const allComment = place.comments && place.comments.map(comment => {\r\n    return (\r\n      <p>{comment.text}</p>\r\n    )\r\n  })\r\n  return (\r\n    <div>\r\n      {!added && <MDBAlert color=\"danger\">adedd to place List</MDBAlert>}\r\n      <MDBContainer\r\n        style={{ height: \"100%\", width: \"100%\", paddingTop: \"10rem\" }}\r\n        className=\"mt-5  d-flex justify-content-center align-items-center\"\r\n      >\r\n        <MDBRow>\r\n          <MDBCol style={{ maxWidth: \"40rem\" }}>\r\n            <MDBCard reverse>\r\n              <MDBCardImage\r\n                style={{ height: '20rem', width: \"100%\" }}\r\n                className=\"cardPhoto\"\r\n                cascade\r\n                src={place.image}\r\n              />\r\n              <MDBCardBody cascade className=\"text-center\">\r\n                <MDBCardTitle>{place.name}</MDBCardTitle>\r\n                <h5 className=\"indigo-text\">\r\n                  <strong>{place.category}</strong>\r\n                </h5>\r\n                <MDBCardText>{place.description}</MDBCardText>\r\n                <MDBCardText>{place.location}</MDBCardText>\r\n                <MDBCardText>{place.workingHours}</MDBCardText>\r\n                <MDBCardText>{place.date}</MDBCardText>\r\n                <MDBBtn\r\n                  outline\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    addPlace();\r\n                    add();\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Add To List\r\n                </MDBBtn>\r\n                {errorRating && (\r\n                  // className=\"error-anim\"\r\n                  <div style={{ color: \"#C70039\" }}>\r\n                    Error! already reviewed\r\n                    <span class=\"gradient\"></span>\r\n                    <span class=\"spotlight\"></span>\r\n                  </div>\r\n                )}\r\n                <ReactStars\r\n                  count={5}\r\n                  value={score}\r\n                  onChange={ratingChanged}\r\n                  size={24}\r\n                  color2={\"#ffd700\"}\r\n                />\r\n                <MDBBtn\r\n                  style={{ backgroundColor: \"black\", margin: \"10px\" }}\r\n                  size=\"md\"\r\n                  onClick={handleRating}\r\n                >\r\n                  Review\r\n                </MDBBtn>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n          <MDBCol lg=\"6\" style={{ width: \"900px\" }}>\r\n            <h2>Join the Discussion!</h2>\r\n            <form>\r\n              <div className=\"grey-text\">\r\n                <MDBInput type=\"textarea\" rows=\"2\" label=\"Your Comment\" name=\"text\" icon=\"pencil-alt\" onChange={(e) => onChangeInput(e)} />\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <MDBBtn outline color=\"secondary\" onClick={handleComment}>\r\n                  Comment\r\n                        <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\r\n                </MDBBtn>\r\n                <div className=\"grey-text\">\r\n                  {allComment}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, BrowserRouter } from \"react-router-dom\";\r\nimport Axios from 'axios'\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBIcon, MDBRow, MDBCol, MDBAlert, MDBContainer, MDBBtn } from 'mdbreact';\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport ShowOnePlace from './ShowOnePlace';\r\nimport API_URL from \"../../apiConfig\";\r\nexport default function Home(props) {\r\n\r\n    const [places, setPlaces] = useState([])\r\n    const [category, setCategory] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState()\r\n    const [filterPlaces, setFilterPlaces] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${API_URL}/api/place`)\r\n            .then(res => {\r\n                setPlaces(res.data.result)\r\n                setFilterPlaces(res.data.result)\r\n                console.log(\"Places info:\", places)          \r\n                let categories = res.data.result.map(place => place.category)\r\n                categories.unshift('All Places')\r\n                setCategory(Array.from(new Set(categories)))\r\n                console.log(\"What is going on? ++++++\")\r\n            })\r\n    }, [])\r\n\r\n\r\n    const filteredPlaces = filterPlaces.map(place => {\r\n\r\n        return (\r\n            <Link to={`/show/${place._id}`}>\r\n                <MDBCol className='placeItem' md=\"4\" style={{ maxWidth: \"20rem\" }}>\r\n                    <MDBCard reverse>\r\n                        <MDBCardImage className=\"cardPhoto\" cascade style={{ height: '20rem', width: \"100%\" }} src={place.image} />\r\n                        <MDBCardBody cascade className=\"text-center\">\r\n                            <MDBCardTitle>{place.name}</MDBCardTitle>\r\n                            <p>\r\n                                Read more\r\n                            <MDBIcon icon='angle-double-right' className='ml-2' />\r\n                            </p>\r\n\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n\r\n    //function to filter the place by the type \r\n    const onChangeHandler = (e) => {\r\n        console.log(\"onChangeHandler\")\r\n        let value = e\r\n\r\n        console.log(value)\r\n        setSelectedCategory(value)\r\n        if (value == 'All Places') {\r\n            setFilterPlaces(places)\r\n        } else {\r\n            let filter = places.filter(place => place.category == value)\r\n            setFilterPlaces(filter)\r\n        }\r\n    }\r\n\r\n    let allSelect = category.map(ele => <MDBDropdownItem onClick={() => onChangeHandler(ele)}>{ele}</MDBDropdownItem>)\r\n\r\n    //\r\n    console.log(\"all category(s) - allSelect \", allSelect)\r\n    //\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <br />\r\n            <br />\r\n            <h1 className='dark-text mt-3  d-flex justify-content-center align-items-center '>ℝ𝕆𝕌ℕ𝔻</h1>\r\n            <MDBDropdown\r\n                style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\r\n                className='mt-5  d-flex justify-content-center align-items-center '\r\n            >\r\n                <MDBDropdownToggle caret className=\"mt-3\" gradient=\"deep-blue\" style={{ color: \"black\" }}>\r\n                    Where - 2 - Go\r\n         </MDBDropdownToggle>\r\n                <MDBDropdownMenu basic  >\r\n                    <MDBDropdownItem header > Jeddah Places</MDBDropdownItem>\r\n                    {allSelect}\r\n                </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n            <MDBRow className=\"placesContainer\" style={{ margin: \"0 auto\" }}>\r\n                {filteredPlaces}\r\n            </MDBRow>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Profile from \"../pages/Profile\"\r\n\r\n\r\nexport default function AuthRoute(props) {\r\n  if (props.auth.isLoggedIn) {\r\n    return (\r\n      <Route>\r\n        <Profile\r\n          setAuth={props.setAuth}\r\n          auth={props.auth}\r\n          user={props.user}\r\n          userProfile={props.userProfile}\r\n          setUserProfile={props.setUserProfile}\r\n        />\r\n      </Route>\r\n    );\r\n  } else {\r\n    return (\r\n      <Route>\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBRow } from \"mdbreact\";\r\n\r\nexport const AboutUs = () => {\r\n    return (\r\n        <>\r\n        <br/>\r\n          <h1> <strong>About Us</strong></h1>\r\n          <br/> \r\n          <h2> <strong>Created by Final-Battle Team</strong></h2>  \r\n        </>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBRow } from \"mdbreact\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <>\r\n            <div className=\"footer\">\r\n\r\n                <footer className=\"footer-txt\">&copy; Copyright 2021. <a href=\"https://git.generalassemb.ly/Finall-Battle/final_battle\">Final-Battle </a> Team</footer>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link, BrowserRouter, useParams } from \"react-router-dom\";\r\nimport { MDBCard, MDBRow, MDBCardImage, MDBCardText, MDBIcon, MDBCardTitle, MDBCol, MDBLightbox, MDBBtn, MDBAlert, MDBCardBody, MDBSpinner } from 'mdbreact';\r\nimport Profile from \"../pages/Profile\"\r\nimport API_URL from \"../../apiConfig\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n//  import API_URL from '../apiConfig.js'\r\nconst validtionSchima = Yup.object({\r\n    name: Yup.string()\r\n        .required('Name is required'),\r\n    email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n    password: Yup.string(),\r\n    confirmPassword: Yup.string().test('passwords-match', 'Passwords must match ', function (value) {\r\n        return this.parent.password === value;\r\n    }),\r\n    img: Yup.string().required(\"This Field is Required\")\r\n})\r\nexport default function EditUserInfo(props) {\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useState(props.user)\r\n    const { id } = useParams()\r\n    console.log(props)\r\n    const user = {\r\n        name: userInfo.name,\r\n        email: userInfo.email,\r\n        password: '',\r\n        confirmPassword: \"\",\r\n        img: userInfo.img\r\n    }\r\n    console.log('User const ==>', user)\r\n    // to add the user info to database\r\n    const onSubmit = (values) => {\r\n        // let userId = props.userProfile._id\r\n        axios\r\n            .post(`${API_URL}/api/user/edituserinfo/${id}`, values)\r\n            .then((res) => {\r\n                console.log(\"res.data.user from profile update: \", res.data.user)\r\n                props.setUserProfile(values)\r\n                let userdetails = {\r\n                    name: values.name,\r\n                    email: values.email\r\n                }\r\n                setUserInfo(userdetails)\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    // const uploadImagefunc = (e) => {\r\n    //     var formdata = new FormData();\r\n    //     formdata.append(\"image\", e.target.files[0]);\r\n    //     axios.post(\"https://api.imgur.com/3/image\", formdata, { headers: { \"Authorization\": \"Client-ID 218eb66b0d739ed\" } })\r\n    //         .then(result => console.log(result.data.data.link))\r\n    //         .catch(error => console.log('error', error));\r\n    // }\r\n    // console.log(image)\r\n    return (\r\n        <>\r\n            {userInfo.name && userInfo.email == \"admin@admin.com\" ?\r\n                <Link to={`/create`}>\r\n                    ℂℝ𝔼𝔸𝕋𝔼\r\n                    </Link>\r\n                : <Formik\r\n                    initialValues={userInfo}\r\n                    // validationSchema={validtionSchima}\r\n                    onSubmit={(values) => onSubmit(values)}\r\n                >\r\n                    <FormikForm className=\"mt-5\" style={{ color: \"black\" }}\r\n                    >\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"4\" md=\"12\" className=\"mb-lg-0 mb-4\">\r\n                                <MDBCard testimonial>\r\n                                    <MDBCardBody>\r\n                                        <MDBCardTitle>  <h4 className=\"font-weight-bold mb-4\">{userInfo.name ? userInfo.name : userInfo.name}</h4></MDBCardTitle>\r\n                                        {/* <MDBCardTitle>  <h4 className=\"font-weight-bold mb-4\">{userInfo.name}</h4></MDBCardTitle> */}\r\n                                        <hr />\r\n                                        <MDBCardText>  <p className=\"dark-grey-text mt-4\">\r\n                                            <MDBIcon icon=\"quote-left\" className=\"pr-2\" />\r\n                                            {userInfo.name ? userInfo.email : userInfo.email}\r\n                                            {/* {userInfo.email} */}\r\n                                        </p></MDBCardText>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"4\" md=\"12\" className=\"mb-lg-0 mb-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"formGroupExampleInput\"> Change Name : </label>\r\n                                    <Field\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                    />\r\n                                    <ErrorMessage name=\"name\" render={(msg) => <MDBAlert color=\"danger\" >\r\n                                        {msg}\r\n                                    </MDBAlert>} />\r\n                                    <label htmlFor=\"formGroupExampleInput\">Change Email : </label>\r\n                                    <Field\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                    />\r\n                                    <ErrorMessage name=\"email\" render={(msg) => <MDBAlert color=\"danger\" >\r\n                                        {msg}\r\n                                    </MDBAlert>} />\r\n                                    <label htmlFor=\"formGroupExampleInput\"> Change password : </label>\r\n                                    <Field\r\n                                        type=\"Password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                    />\r\n                                    <MDBBtn type=\"submit\" style={{ margin: '20px 0px 20px 140px', color: \"black\" }} gradient=\"deep-blue\">\r\n                                        Save\r\n                                        </MDBBtn>\r\n                                </div>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </FormikForm>\r\n                </Formik>\r\n                //  <div className=\"spinner-border\" role=\"status\">\r\n                //     <span className=\"sr-only\">Loading...</span>\r\n                // </div> \r\n            }\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBCard, MDBAnimation, MDBCardBody, MDBAlert } from 'mdbreact';\r\nimport DatePicker from \"react-datepicker\";\r\nimport API_URL from \"../../apiConfig\";\r\n\r\n\r\nexport default function EditPlace(props) {\r\n    const { placeId } = useParams();\r\n    const history = useHistory();\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [flag, setFlag] = useState(false)\r\n\r\n    //datepicker\r\n    const handleOnChangeDate = (date) => {\r\n\r\n        setStartDate(date)\r\n      \r\n        setPlaceFields((prevState)=>({\r\n          ...prevState, date: date  \r\n        }))\r\n      }\r\n\r\n    const [placetFields, setPlaceFields] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        image: \"\",\r\n        category: \"Choose the place\",\r\n        location: \"\",\r\n        workingHours : \"\",\r\n      \r\n    });\r\n\r\n    //get one place\r\n    const getPlace = () => {\r\n        console.log(placeId);\r\n        axios\r\n            .get(`${API_URL}/api/place/${placeId}`)\r\n            .then(data => {\r\n                setPlaceFields(data.data.pros);\r\n                console.log(data.data.pros)\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlace();\r\n    }, [])\r\n\r\n    const onChangeInput = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setPlaceFields({\r\n            ...placetFields,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    //edit places\r\n    const handleEdit = (placeId) => {\r\n      axios.put(`${API_URL}/api/place/${placeId}`, placetFields)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      alert(\"Edited successfully\");\r\n      history.push(\"/profile\");\r\n      setFlag(pre => !pre)\r\n    }\r\n\r\n    return (\r\n        <div className=\"classicformpage\">\r\n          \r\n            <MDBContainer\r\n            style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\r\n            className='mt-5  d-flex justify-content-center align-items-center'\r\n            >\r\n             <MDBCol md='6' xl='5' className='mb-4' >\r\n                <MDBAnimation type='fadeInRight' delay='.3s'>\r\n                  <MDBCard id='classic-card'>\r\n                  <h1 className='text-center mt-5' ><MDBIcon icon='' />\r\n                        𝔼𝕕𝕚𝕥\r\n                      </h1>\r\n              <MDBCardBody className='white-text'>\r\n\r\n                <hr className='hr-light' />\r\n\r\n                <MDBInput\r\n                  /* className='white-text'\r\n                  iconClass='white-text' */\r\n                  label='Name'\r\n                  name=\"name\"\r\n                  onChange={(e) => onChangeInput(e)}\r\n                  value={placetFields.name}\r\n                />\r\n                <MDBInput\r\n                  /*    className='white-text'\r\n                     iconClass='white-text' */\r\n                  label='Description'\r\n                  name=\"description\"\r\n                  onChange={(e) => onChangeInput(e)}\r\n                  value={placetFields.description}\r\n                />\r\n\r\n                <MDBInput\r\n                  label='Image'\r\n                  name=\"image\"\r\n                  value={placetFields.image}\r\n                  /* onChange={(e) =>uploadImageHundler(e)} type=\"file\" */\r\n                  onChange={(e) => onChangeInput(e)}\r\n\r\n                />\r\n\r\n                <MDBInput\r\n                  /* className='white-text'\r\n                  iconClass='white-text' */\r\n                  label='Location'\r\n                  name=\"location\"\r\n                  onChange={(e) => onChangeInput(e)}\r\n                  value={placetFields.location}\r\n                />\r\n\r\n\r\n                <MDBInput\r\n                  /* className='white-text'\r\n                  iconClass='white-text' */\r\n                  label='working Hours'\r\n                  name=\"workingHours\"\r\n                  value={placetFields.workingHours}\r\n                  onChange={(e) => onChangeInput(e)}\r\n\r\n                />\r\n\r\n\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  selected={startDate}\r\n                  value={placetFields.date}\r\n                  onChange={(date) => handleOnChangeDate(date)} />\r\n\r\n                <br /><br />\r\n\r\n                <select className=\"browser-default custom-select\" name=\"category\" value={placetFields.category} onChange={(e) => onChangeInput(e)}>\r\n                  <option >Choose the place</option>\r\n                  <option>cafe</option>\r\n                  <option >restaurant</option>\r\n                  <option >entertainment</option>\r\n                  <option >concert</option>\r\n\r\n                </select>\r\n\r\n                <div className='text-center mt-4 black-text'>\r\n                  <MDBBtn onClick={() => handleEdit(placeId)}>Edit</MDBBtn>\r\n                </div>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBAnimation>\r\n        </MDBCol>\r\n      </MDBContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBListGroupItem, MDBNavItem, MDBNavLink, MDBIcon, MDBContainer, MDBListGroup } from 'mdbreact';\r\nimport axios from \"axios\";\r\nexport default function OneItemList(props) {\r\n    // const [place, setPlaces] = useState([]) // you won't need the whole array of places when you get one place, and set the state \"selectPlace\" with its data\r\n    // const [place, setPlace] = useState(selectPlace);\r\n    // const [userTovisit, setUserTovisit]=useState()\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <MDBContainer>\r\n                <MDBListGroup style={{ width: \"22rem\" }}>\r\n                    <MDBListGroupItem><table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">category</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>{props.onePlace.name}</td>\r\n                                <td>{props.onePlace.category}</td>\r\n                                <td><MDBIcon far icon=\"trash-alt\" onClick={() => props.deleteplace(props.onePlace._id)} /> </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    </MDBListGroupItem>\r\n                </MDBListGroup>\r\n            </MDBContainer>\r\n        </div>\r\n    )\r\n    }\r\n    \r\n","import { useState, useEffect } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBRow, MDBAlert, MDBNavbarNav, MDBNavbarToggler, MDBListGroupItem, MDBNavItem, MDBNavLink, MDBIcon, MDBContainer, MDBListGroup } from 'mdbreact';\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport OneItemList from '../pages/OneItemList'\r\nimport API_URL from '../../apiConfig';\r\nexport default function (props) {\r\n  const [placesToVisit, setPlacesToVisit] = useState([]);\r\n  const [userId, setUserId] = useState(props.auth.currentUser._id);\r\n  const [change, setChange] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => axios.get(`${API_URL}/api/tovisit/${userId}`)\r\n    .then(data => {\r\n      console.log(\"data.data.placesToVisit ----\", data.data.placesToVisit)\r\n      setPlacesToVisit(data.data.placesToVisit)\r\n    })\r\n    , [])\r\n\r\n  const deleteplace = (plaicId) => {\r\n    axios.delete(`${API_URL}/api/tovisit/${userId}/${plaicId}`)\r\n      .then((res) => console.log(res))\r\n    setChange(true)\r\n    setPlacesToVisit(placesToVisit.filter(ele => ele._id != plaicId)\r\n    )\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n    {change && <MDBAlert color=\"danger\" dismiss>deleted</MDBAlert>}  \r\n    {placesToVisit.length > 0 ? (<div className='padding'>\r\n        <MDBRow className=\"justify-content-md-center\">\r\n          {placesToVisit.map((onePlace, i) => {\r\n            return (\r\n              <OneItemList onePlace={onePlace} delete={true} deleteplace={() => deleteplace(onePlace._id)} />\r\n            )\r\n          })}\r\n        </MDBRow>\r\n      </div>) : <MDBAlert color=\"danger\" dismiss>nothing here</MDBAlert>}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n","import './App.css';\r\nimport SignUp from \"./components/action/SignUp\"\r\nimport Login from \"./components/action/Login\"\r\nimport Create from './components/action/Create';\r\nimport NavBar from './components/action/NavBar';\r\nimport Home from \"./components/pages/Home\";\r\nimport ShowOnePlace from './components/pages/ShowOnePlace';\r\nimport AuthRoute from './components/action/AuthRoute';\r\nimport { AboutUs } from './components/pages/AboutUs';\r\nimport { Footer } from './components/pages/Footer';\r\nimport EditUserInfo from \"./components/pages/EditUserInfo\"\r\nimport axios from \"axios\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport EditPlace from \"./components/action/EditPlace\"\r\nimport UserList from './components/pages/UserList'\r\nimport API_URL from \"./apiConfig\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  const [loadingData, setLoadingData] = useState(false);\r\n  const [auth, setAuth] = useState({ currentUser: null, isLoggedIn: false });\r\n  const [userProfile, setUserProfile] = useState({})\r\n  const [dataLoaded, setDataloaded] = useState(false)\r\n  const [userData, setUserData] = useState({ currentDataUser: null })\r\n\r\n  const userLogin = () => {\r\n    if (localStorage.jwtToken) {\r\n      const jwtToken = localStorage.jwtToken;\r\n      const currentUser = jwt_decode(jwtToken, \"SECRET\").user;\r\n      const currentPlace = jwt_decode(jwtToken, \"SECRET\").place;\r\n      const currentDataUser = jwt_decode(jwtToken, \"SECRET\").user;\r\n      setAuth({ currentUser, isLoggedIn: true });\r\n      // setUserData({ currentDataUser });\r\n      getProfile(currentUser);\r\n      // getBook(currentBook)\r\n    } else {\r\n      setAuth({ currentUser: null, isLoggedIn: false });\r\n    }\r\n    // setDataloading(true)\r\n    setDataloaded(true)\r\n    console.log(\"The current User is: \", auth.currentUser);\r\n    console.log(\"The current DATA User  \", userData.currentDataUser);\r\n  };\r\n\r\n  const getProfile = async (currentUser) => {\r\n    console.log(\"get profile in App.js ======\",currentUser)\r\n    const res = await axios.get(`${API_URL}/api/user/profile/${currentUser._id}`)\r\n    console.log('Loaded user profile: ', res)\r\n    setUserProfile(res.data)\r\n  }\r\n  useEffect(userLogin, []);\r\n\r\n  useEffect(() => {\r\n    if (userProfile.name) {\r\n      setDataloaded(true)\r\n    }\r\n  }, [userProfile])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"classicformpage\">\r\n        <Router>\r\n          <NavBar loginCallback={userLogin} isLoggedIn={auth.isLoggedIn} />\r\n          <Switch>\r\n\r\n            <Route path=\"/profile\">\r\n              <AuthRoute\r\n                setAuth={setAuth}\r\n                auth={auth}\r\n                user={auth.currentUser}\r\n                userProfile={userProfile}\r\n\r\n              />\r\n\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n\r\n            <Route path=\"/login\">\r\n              <Login loginCallback={userLogin} />\r\n            </Route>\r\n            <Route exact path=\"/edit/:placeId\">\r\n              <EditPlace user={auth.currentUser} />\r\n            </Route>\r\n            <Route path=\"/show/:id\">\r\n              <ShowOnePlace\r\n                user={auth.currentUser}\r\n                isLoggedIn={auth.isLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route path=\"/edituserinfo/:id\">\r\n              <EditUserInfo\r\n                setAuth={setAuth}\r\n                auth={auth}\r\n                user={auth.currentUser}\r\n                userProfile={userProfile}\r\n                setUserProfile={setUserProfile}\r\n              />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <Create\r\n                user={auth.currentUser}\r\n                isLoggedIn={auth.isLoggedIn}\r\n              />\r\n            </Route>\r\n            {auth.isLoggedIn &&\r\n              <Route exact path=\"/tovisit\">\r\n                <UserList auth={auth} user={userData.currentDataUser} setAuth={setAuth} />\r\n              </Route>\r\n            }\r\n            <Route path=\"/signup\">\r\n              <SignUp />\r\n            </Route>\r\n            <Route path=\"/aboutus\">\r\n              <AboutUs />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n        {/* : <Spinner animation=\"border\" />\r\n      } */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\r\n'bootstrap-css-only/css/bootstrap.min.css'; import\r\n'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}